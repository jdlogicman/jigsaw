#!/bin/bash 

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )
. $DIR/scripts/parse_args.sh
. $DIR/scripts/samplesheet.sh

if ! mkdir -p "$SCRATCH_DIR"
then
	echo "Unable to create scratch dir: $SCRATCH_DIR"
	usage
fi

LOCAL_RUN_DIR=$SCRATCH_DIR/run
LOCAL_FASTQ_DIR=$SCRATCH_DIR/Fastq

if ls $OUT_DIR/Fastq/Fastq/*.fastq.gz 1> /dev/null 2>&1
then
	#TODO
#echo "Fastqs already exist! Please remove them before proceeding"
	#exit 1
	echo "Fastqs exist - skipping"
	ln -s $OUT_DIR/Fastq $LOCAL_FASTQ_DIR
	exit 0
fi


if ! [ -z "$JOB_ID" ]
then
	# Running as an SGE_JOB
	echo "Copying run to $LOCAL_RUN_DIR"
	if ! rsync -avpP "$RUN_DIR/" $LOCAL_RUN_DIR > /dev/null
	then
		echo "Error syncing run folder to scratch"
		exit 1
	fi
	SYNC_BACK="rsync -avpP $LOCAL_FASTQ_DIR/ $OUT_DIR/Fastq > /dev/null"
else
	echo "Running without local scratch"
	ln -s $(readlink -e $RUN_DIR) $LOCAL_RUN_DIR
	SYNC_BACK="mv $LOCAL_FASTQ_DIR $OUT_DIR/Fastq; ln -s $OUT_DIR/Fastq $LOCAL_FASTQ_DIR"
fi

# rewrite the sample sheet
cd $LOCAL_RUN_DIR
if [ -f SampleSheet.csv ] 
then
	cp SampleSheet.csv SampleSheet.csv.$$
fi
rewrite_samplesheet SampleSheet.csv

# run Isis to generate FASTQ files
exit_status=0
if ! /illumina/development/Isis/latest/Isis -r $LOCAL_RUN_DIR  -a $LOCAL_FASTQ_DIR
then
	echo "Generating Fastq files failed"
	exit_status=1
fi
# sync back results in all cases
eval $SYNC_BACK 

exit $exit_status




