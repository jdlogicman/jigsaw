#!/bin/bash

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )
. $DIR/scripts/parse_args.sh
. $DIR/scripts/parallel_utils.sh

if ! [ -d "$OUT_DIR" ] || ! mkdir -p "$OUT_DIR"
then
	echo "Unable to make output directory"
	usage
fi

if ! mkdir -p "$SCRATCH_DIR"
then
	echo "Unable to create scratch dir: $SCRATCH_DIR"
	usage
fi

if [ -d $OUT_DIR/spades ]
then
	echo "$OUT_DIR/spades already exists. Please remove it"
	exit 1
fi

SPADES_OUTPUT_ROOT=$SCRATCH_DIR/spades

# FASTQs are only read once - no need to stage to scratch if not already there
# but if the ARE there, reading them will be faster than Isilon
if ls $SCRATCH_DIR/Fastq/Fastq/*.fastq.gz &> /dev/null
then
	FASTQ_DIR=$SCRATCH_DIR/Fastq/Fastq
elif ls $OUT_DIR/Fastq/Fastq/*.fastq.gz &> /dev/null
then
	FASTQ_DIR=$OUT_DIR/Fastq/Fastq
else
	echo "No FASTQ files found"
	exit 1
fi

SAMPLES=$(cd $FASTQ_DIR && ls *.fastq.gz | cut -f1 -d_ | sort -u | grep -v Undetermined)
for sample in $SAMPLES
do
	echo "Processing sample $sample"
	$DIR/scripts/assemble_sample $SPADES_OUTPUT_ROOT/$sample $(find $FASTQ_DIR -name "$sample*fastq.gz" -print) -t 4 -m 32 &
	jobs="$jobs $!"
	wait_until_jobs_below 3
done

failed=false

if ! wait_until_all_complete $jobs
then
	failed=true
	echo "Error assembling one or more samples"
fi

if ! [ -z "$JOB_ID" ]
then
	# Running as an SGE_JOB
	if ! rsync -avpP $SPADES_OUTPUT_ROOT/ $OUT_DIR/spades
	then
		echo "Error syncing spades results to output"
		exit 1
	fi
else
# no local scratch - move results (for speed) and soft link (for access)
	mv $SPADES_OUTPUT_ROOT $OUT_DIR/spades
	ln -s $OUT_DIR/spades $SPADES_OUTPUT_ROOT 
fi
if $failed
then
	exit 1
fi
