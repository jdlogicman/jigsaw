#!/bin/bash

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )
. $DIR/scripts/parse_args.sh
. $DIR/scripts/tool_paths.sh
# arguments
# standard ones
# assembly directory
# genome

if [ -z "$OUT_DIR" ] || [ $# -lt 2 ]
then
	echo "Usage: $0 -r run -o output spades_assembly genome_path"
	exit 1
fi

if ! mkdir -p "$OUT_DIR"
then
	echo "unable to create $OUT_DIR"
	exit 1
fi


ASSEMBLY=$1
GENOME=$2


if ! [ -f "$ASSEMBLY/scaffolds.fasta" ]
then
	echo "$ASSEMBLY does not contain a SPAdes assembly"
	exit 1
fi

if [[ ! -f "$GENOME" || ! $GENOME =~ .*\.fa ]]
then
	echo "$GENOME must be the full path to a .fa file"
	exit 1
fi

# dot plots
export PATH=$MUMMER_DIR:$PATH
TMPDIR=/tmp/plottmp.$$
mkdir -p $TMPDIR
pushd $TMPDIR
# replace annoying node names in assembly
sed 's/\(NODE_[0-9]*\)\(_.*\)/\1/g' "$ASSEMBLY/scaffolds.fasta" > assembly.fasta
nucmer -mumreference -c 1000 -l 100 -banded -d 10 ${GENOME} assembly.fasta
delta-filter -1 out.delta > out.1delta
mummerplot -large -fat out.1delta --png
cp out.png "$OUT_DIR/dotplot.png"

# create a BED file showing coverage gaps
show-tiling -V0 -v 20 out.1delta |awk '{if(substr($1,0,1)==">") CHR=substr($1,2); else if($3>0) print CHR"\t"$2"\t"$2+$3"\t0"}' > $OUT_DIR/gaps.bed
popd
rm -rf $TMPDIR


# aligned scaffolds
export PATH=$BWA_DIR:$SAMTOOLS_DIR:$PATH
MYSCRATCH=$SCRATCH_DIR/bwa.$$
mkdir -p $MYSCRATCH
bwa bwasw -t 4 -M ${GENOME} $ASSEMBLY/scaffolds.fasta > $MYSCRATCH/scaffolds.sam
samtools view -bS $MYSCRATCH/scaffolds.sam > $MYSCRATCH/scaffolds.bam
samtools sort $MYSCRATCH/scaffolds.bam $OUT_DIR/scaffolds
samtools index $OUT_DIR/scaffolds.bam

rm -rf $MYSCRATCH
